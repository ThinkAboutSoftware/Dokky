<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.my.mapper.MypageMapper">
	
	<!-- 나의 정보 한줄 가져오기 -->
	 <select id="getMyInfo" resultType="org.my.domain.MemberVO">
		select * from DK_MEMBER where userId = #{userId}
	</select>
	
	<!-- 나의 정보 변경하기 -->
	<update id="updateMyInfo">
		update DK_MEMBER set 
			nickName = #{nickName},
			email 	 = #{email},
			phoneNum = #{phoneNum},
			bankName = #{bankName},
			account  = #{account}
	  where userId   = #{userId}
	</update>
	
	<!-- 비밀번호 가져오기 --> 
	 <select id="getMemberPW" resultType="String">
		select userpw from DK_MEMBER where userId = #{userId}
	</select>
	
	<!-- 비밀번호 변경 -->
	<update id="updateMyPassword">
		update DK_MEMBER set userpw = #{userPw} where userId = #{userId}
	</update>
	
	<select id="getMyBoardList" resultType="org.my.domain.BoardVO"> 
	select num,
		   title,
		   replyCnt,
		   hitCnt,
		   category,
		   regdate from 
			 ( select /*+INDEX_DESC(DK_BOARD PK_DK_BOARD) */ rownum rn,
			 														num,
			 														title,
			 														replyCnt,
			 														hitCnt,
			 														category,
			 														regdate
			from DK_BOARD where userId = #{userId} and <![CDATA[ rownum <= #{pageNum} * #{amount} )
				  where rn > (#{pageNum} -1) * #{amount}  
				  ]]>
	</select>
	
	<select id="getMyBoardCount" resultType="int">
		select count(*) from DK_BOARD where userId = #{userId} and num > 0
	</select>
	
	<select id="getMyReplylist" resultType="org.my.domain.ReplyVO">
	  <![CDATA[
		 select reply_num, num, reply_content, userId, replydate
		 from 
		   (
		    select /*+INDEX_DESC(DK_REPLY pk_reply) */ 
		      rownum rn, reply_num, num, reply_content, userId, replydate
		    from DK_REPLY
		    where userId = #{userId}
		    and reply_num > 0
		    and rownum <= #{pageNum} * #{amount}
		   ) where rn > (#{pageNum} -1) * #{amount}
	  ]]>
	</select>
	
	<select id="getMyReplyCount" resultType="int">
		<![CDATA[
		select count(reply_num) from DK_REPLY where userId = #{userId} and reply_num > 0
		]]>
	</select>
	
	<select id="getScrapCnt" resultType="int">
		<![CDATA[
		select count(*) from dk_scrap where userId = #{userId} and num = #{num}
		]]>
	</select>
	
	<insert id="insertScrapData">
		insert into dk_scrap (scrap_num,userId, num) values (seq_dk_scrap.nextval, #{userId}, #{num})
	</insert>
	
	<delete id="deleteScrap">
		delete dk_scrap where userId = #{userId} and num = #{num}
	</delete>
	
	<select id="getMyScrapCount" resultType="int">
		<![CDATA[
		select count(*) from dk_scrap where userId = #{userId}
		]]>
	</select>
	
	<!--  select reply_num, num, reply_content, userId, replydate
		 from 
		   (
		    select /*+INDEX_DESC(DK_REPLY pk_reply) */ 
		      rownum rn, reply_num, num, reply_content, userId, replydate
		    from DK_REPLY
		    where userId = #{userId}
		    and reply_num > 0
		    and rownum <= #{pageNum} * #{amount}
		   ) where rn > (#{pageNum} -1) * #{amount}  -->
		
		
		<select id="getMyScraplist" resultType="org.my.domain.scrapVO"> 
		<![CDATA[
		   select 	 
	 			  num,
		   		  userId,
		   		  nickName,
		   		  regdate,
		   		  scrap_num,
		   		  title,
		   		  replyCnt,
		   		  hitCnt,
		   		  category
			 from 
			   ( SELECT
			   	  ROW_NUMBER() OVER(ORDER BY scrap.scrap_num desc) AS rn,
				  BOARD.num,
				  BOARD.userId,
				  BOARD.nickName,
				  scrap.regdate,
				  scrap.scrap_num,
				  title,
				  replyCnt,
				  hitCnt,
				  category
			FROM 
				  DK_BOARD BOARD inner JOIN dk_scrap scrap on BOARD.num = scrap.num 
				  
			WHERE scrap.userid = #{userId} order by scrap.scrap_num desc)
			
			where rn > (#{pageNum} -1) * #{amount} and rn <= #{pageNum} * #{amount}
		]]>
	</select>   
		   
	<insert id="insertChargeData">
		insert into dk_cash (
							cash_num,
							cashKind,
							cashAmount,
							userId,
							specification
							) values 
										(
										seq_dk_cash.nextval,
										#{cashKind},
										#{cashAmount},
										#{userId},
										#{specification} 
										)
	</insert>
	
	<insert id="insertReChargeData">
		insert into dk_cash (
							cash_num,
							cashKind,
							cashAmount,
							userId,
							specification
							) values 
										(
										seq_dk_cash.nextval,
										#{cashKind},
										#{cashAmount},
										#{userId},
										#{specification} 
										)
	</insert>
	
	<select id="getMyCashHistoryCount" resultType="int">
		<![CDATA[
		select count(*) from dk_cash where userId = #{userId}
		]]>
	</select>
	
	<!-- <select id="getMyCashHistory" resultType="org.my.domain.cashVO"> 
		<![CDATA[
		   select 
		   		  cashKind,
		   		  cashAmount,
		   		  specification,
		   		  regDate,
		   		  board_num,
		   		  reply_content,
		   		  title,
		   		  cash_num
			 from 
			   ( SELECT
				  rownum rn,
				  cash.cashKind,
				  cash.cashAmount,
				  cash.specification,
				  cash.regDate,
				  cash.board_num, 
				  reply.reply_content,
				  board.title,
				  cash.cash_num
			FROM 
				  dk_cash cash inner JOIN dk_board board on board.num = cash.board_num 
				  
				  inner JOIN dk_reply reply on reply.reply_num = cash.reply_num 
				  
			WHERE cash.userid = #{userId} and rownum <= #{pageNum} * #{amount} order by cash.cash_num desc)
			
			where rn > (#{pageNum} -1) * #{amount}
		]]>
	</select> -->
	
	<select id="getMyCashHistory" resultType="org.my.domain.cashVO"> 
		<![CDATA[
		   select 
                cashKind,
		   		  cashAmount,
		   		  specification,
		   		  regDate,
		   		  board_num,
		   		  reply_content,
		   		  title,
		   		  cash_num
			 from 
			   ( SELECT
				   ROW_NUMBER() OVER(ORDER BY cash.cash_num desc) AS rn,
				  cash.cashKind,
				  cash.cashAmount,
				  cash.specification,
				  cash.regDate,
				  cash.board_num, 
				  reply.reply_content,
				  board.title,
				  cash.cash_num
			FROM 
				  dk_cash cash inner JOIN dk_board board on board.num = cash.board_num 
				  
				  inner JOIN dk_reply reply on reply.reply_num = cash.reply_num 
				  
			WHERE cash.userid = #{userId} order by cash.cash_num desc)
			
			where rn > (#{pageNum} -1) * #{amount} and rn <= #{pageNum} * #{amount} 
		]]>
	</select>
	
	<delete id="removeScrap">
		delete from dk_scrap where scrap_num = #{scrap_num}
	</delete>
	
</mapper>
