<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.my.mapper.ReplyMapper">

	<insert id="insert">
		insert into DK_REPLY (reply_num, num, reply_content, nickName,userId)
		values (seq_dk_reply.nextval, #{num}, #{reply_content}, #{nickName}, #{userId})
	</insert>

	<select id="read" resultType="org.my.domain.ReplyVO">
		select * from DK_REPLY where reply_num = #{reply_num}
	</select>

	<delete id="delete">
		delete from DK_REPLY where reply_num = #{reply_num}
	</delete>

	<update id="update">
		update DK_REPLY set reply_content = #{reply_content}, updatedate = sysdate 
		where reply_num = #{reply_num}
	</update>

	<select id="getListWithPaging" resultType="org.my.domain.ReplyVO">
	  <![CDATA[
		 select reply_num, num, reply_content, nickName, userId, replydate, updatedate, likeCnt ,dislikeCnt
		 from 
		   (
		    select /*+INDEX(DK_REPLY idx_reply) */ 
		      rownum rn, reply_num, num, reply_content, nickName, userId, replydate, updatedate, likeCnt ,dislikeCnt
		    from DK_REPLY
		    where num = #{num}
		    and reply_num > 0
		    and rownum <= #{cri.pageNum} * #{cri.amount}
		   ) where rn > (#{cri.pageNum} -1) * #{cri.amount}
	  ]]>
	</select>

	<select id="getCountBynum" resultType="int">
		<![CDATA[
		select count(reply_num) from DK_REPLY where num = #{num}
		]]>
	</select>
	
	<!-- 댓글 좋아요 값 체크 -->	
	<select id="checkLikeValue" resultType="String">
		select likeValue from dk_reply_like where userId = #{userId} and reply_num = #{reply_num}
	</select>
	
	<!-- 댓글 좋아요 누르기 -->
	<update id="pushLike">
		update DK_REPLY set likeCnt = likeCnt + 1 where reply_num = #{reply_num}
	</update>
	
	<!-- 댓글 좋아요 컬럼 등록 -->
	<insert id="registerLike">
		insert into dk_reply_like (userId, reply_num, likeValue)
		values (#{userId},#{reply_num},'push')
	</insert>
	
	<!-- 댓글 좋아요 체크값을 push로 변경 -->
	<update id="pushLikeValue">
		update dk_reply_like set likeValue = 'push' where userId = #{userId} and reply_num = #{reply_num}
	</update>

	<!-- 댓글 좋아요 취소  -->
	<update id="pullLike">
		update DK_REPLY set likeCnt = likeCnt - 1 where reply_num = #{reply_num}
	</update>
	
	<!-- 댓글 좋아요 체크값을 pull로 변경 -->
	<update id="pullLikeValue">
		update dk_reply_like set likeValue = 'pull' where userId = #{userId} and reply_num = #{reply_num}
	</update>
	
	<!-- 댓글  좋아요 카운트 가져오기 -->
	<select id="getLikeCount" resultType="String">
		select likeCnt from DK_REPLY where reply_num = #{reply_num}
	</select>
	
	<!-- 댓글 싫어요 누르기  -->
	<update id="pushDisLike">
		update DK_REPLY set dislikeCnt = dislikeCnt - 1 where reply_num = #{reply_num}
	</update>
	
	<!-- 댓글 싫어요 취소  -->
	<update id="pullDisLike">
		update DK_REPLY set dislikeCnt = dislikeCnt + 1 where reply_num = #{reply_num}
	</update>

	<!-- 댓글 싫어요 체크값을 pull로 변경 -->
	<update id="pulldislikeCheck">
		update dk_reply_dislike set dislikeValue = 'pull' where userId = #{userId} and reply_num = #{reply_num}
	</update>
	
	<!-- 댓글 싫어요 체크값을 push로 변경 -->
	<update id="pushDislikeValue">
		update dk_reply_dislike set dislikeValue = 'push' where userId = #{userId} and reply_num = #{reply_num}
	</update>
	
	<!-- 싫어요 값 체크 -->	 
	<select id="checkDisLikeValue" resultType="String">
		select dislikeValue from dk_reply_dislike where userId = #{userId} and reply_num = #{reply_num}
	</select>
	
	<!-- 댓글 싫어요 컬럼 등록 -->
	<insert id="registerDisLike">
		insert into dk_reply_dislike (userId, reply_num, dislikeValue)
		values (#{userId},#{reply_num},'push')
	</insert>
	
	<!-- 댓글 싫어요 카운트 가져오기 -->
	<select id="getDisLikeCount" resultType="String">
		select dislikeCnt from DK_REPLY where reply_num = #{reply_num}
	</select>

</mapper>
