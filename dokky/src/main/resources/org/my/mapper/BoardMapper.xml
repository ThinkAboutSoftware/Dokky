<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.my.mapper.BoardMapper">
	
	<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							title like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'C'.toString()">
							content like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'N'.toString()">
							nickName like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<select id="getList" resultType="org.my.domain.BoardVO"> 
		  <![CDATA[
		  select 
		    	category,replyCnt, num, title, content, nickName, regdate, hitCnt,userId
		  from 
		      (
		     select /*+INDEX_DESC(DK_BOARD PK_DK_BOARD) */ rownum rn, category,replyCnt, num, title, content, 
			
			 nickName, regdate, hitCnt ,userId from DK_BOARD where category = #{category} and
		  ]]>
				<include refid ="criteria"></include>  
			<!-- ( title like '%'||'keyword'||'%' OR content like '%'||'keyword'||'%' OR writer like '%'||'keyword'||'%' ) AND -->
		  <![CDATA[    
		      rownum <= #{pageNum} * #{amount}
		      )
		  where rn > (#{pageNum} -1) * #{amount}   
		  ]]>
	</select>
	
	<select id="getListWithOrder" resultType="org.my.domain.BoardVO">
		 <![CDATA[
		 	select 
				category,
				replyCnt,
				likeCnt,
				num,
				title,
				content,
				nickName,
				regdate,
				hitCnt,
				MONEY,
				userId
			from
			(
	  		  select 
	                category,
					replyCnt,
					likeCnt,
					num,
					title,
					content,
					nickName,
					regdate,
					hitCnt,
					MONEY,
					userId
				from DK_BOARD where category = #{category} 
			]]>	
					<choose>
						<when test='order == "1" '>
							order by hitcnt desc
						</when>
						<when test='order == "2" '>
							order by REPLYCNT desc
						</when>
						<when test='order == "3" '>
							order by likeCnt desc
						</when>
						<when test='order == "4" '>
							order by MONEY desc
						</when>
					</choose>
				 )
				  <![CDATA[
				 where rownum > (#{pageNum} -1) * #{amount} and rownum <= #{pageNum} * #{amount}
			]]>	
	</select>
			
	<select id="getAllList" resultType="org.my.domain.BoardVO"> 
		  <![CDATA[
		  select 
		    	category,replyCnt, num, title, content, nickName, regdate, hitCnt,userId
		  from 
		      (
		     select /*+INDEX_DESC(DK_BOARD PK_DK_BOARD) */ rownum rn, category,replyCnt, num, title, content, 
			
			 nickName, regdate, hitCnt,userId from DK_BOARD where
		  ]]>
				<include refid ="criteria"></include>  
				
		  <![CDATA[    
		      rownum <= #{pageNum} * #{amount}
		      )
		  where rn > (#{pageNum} -1) * #{amount}   
		  ]]>
	</select>
	
	<!-- 입력+pk값을 알기 위한것 -->
	<insert id="insertSelectKey">

		<selectKey keyProperty="num" order="BEFORE" resultType="long">
			select seq_dk_board.nextval from dual
		</selectKey>

		insert into DK_BOARD (num,category,title,content,nickName,userId)
		values (#{num},#{category},#{title}, #{content}, #{nickName},#{userId})
		
	</insert>
	
	<select id="read" resultType="org.my.domain.BoardVO">
		select * from DK_BOARD where num = #{num}
	</select>
	
	<update id="updateHitCnt">
		update dk_board set hitCnt = hitCnt+1 where num = #{num}
	</update>
	
	<update id="update">
		update DK_BOARD
			set title= #{title},
			content=#{content},
			updateDate = sysdate
		where num = #{num}
	</update>
	
	<delete id="delete">
		delete DK_BOARD where num = #{num} 
	</delete>
	
	<select id="getTotalCount" resultType="int">
		select count(*) from DK_BOARD where category = #{category} and <include refid="criteria"></include>  num > 0
	</select>
	
	<select id="getAllTotalCount" resultType="int">
		select count(*) from DK_BOARD where <include refid="criteria"></include>  num > 0
	</select>
	
  	<!-- 해당 글의 댓글 갯수 하나 늘리거나 빼기 --> 
  	<update id="updateReplyCnt">
  		update dk_board set replycnt = replycnt + #{amount} where num = #{num}
  	</update> 
  	
	<!-- 좋아요 누르기 -->
	<update id="pushLike">
		update DK_BOARD set likeCnt = likeCnt + 1 where num = #{num}
	</update>
	
	<!-- 싫어요 누르기  -->
	<update id="pushDisLike">
		update DK_BOARD set dislikeCnt = dislikeCnt - 1 where num = #{num}
	</update>
	
	<!-- 싫어요 취소  -->
	<update id="pullDisLike">
		update DK_BOARD set dislikeCnt = dislikeCnt + 1 where num = #{num}
	</update>
	
	<!-- 좋아요 취소  -->
	<update id="pullLike">
		update DK_BOARD set likeCnt = likeCnt - 1 where num = #{num}
	</update>
	
	<!-- 좋아요 체크값을 pull로 변경 -->
	<update id="pullLikeValue">
		update dk_board_like set likeValue = 'pull' where userId = #{userId} and num = #{num}
	</update>
	
	<!-- 싫어요 체크값을 pull로 변경 -->
	<update id="pulldislikeCheck">
		update dk_board_dislike set dislikeValue = 'pull' where userId = #{userId} and num = #{num}
	</update>
	
	<!-- 좋아요 체크값을 push로 변경 -->
	<update id="pushLikeValue">
		update dk_board_like set likeValue = 'push' where userId = #{userId} and num = #{num}
	</update>
	
	<!-- 싫어요 체크값을 push로 변경 -->
	<update id="pushDislikeValue">
		update dk_board_dislike set dislikeValue = 'push' where userId = #{userId} and num = #{num}
	</update>
	
	<!-- 좋아요 값 체크 -->	
	<select id="checkLikeValue" resultType="String">
		select likeValue from dk_board_like where userId = #{userId} and num = #{num}
	</select>
	
	<!-- 싫어요 값 체크 -->	 
	<select id="checkDisLikeValue" resultType="String">
		select dislikeValue from dk_board_dislike where userId = #{userId} and num = #{num}
	</select>
	
	<!-- 좋아요 컬럼 등록 -->
	<insert id="registerLike">
		insert into dk_board_like (userId, num, likeValue)
		values (#{userId},#{num},'push')
	</insert>
	
	<!-- 싫어요 컬럼 등록 -->
	<insert id="registerDisLike">
		insert into dk_board_dislike (userId, num, dislikeValue)
		values (#{userId},#{num},'push')
	</insert>
	
	<!-- 좋아요 카운트 가져오기 -->
	<select id="getLikeCount" resultType="String">
		select likeCnt from DK_BOARD where num = #{num}
	</select>
	 
	<!-- 싫어요 카운트 가져오기 -->
	<select id="getDisLikeCount" resultType="String">
		select dislikeCnt from DK_BOARD where num = #{num}
	</select>
	
	<!-- 나의 캐시 가져오기 -->
	<select id="getuserCash" resultType="String">
		select cash from DK_member where userId = #{userId}
	</select>
	
	<!-- 기부하는자의 캐시 차감하기 -->
	<update id="updateMycash">
	    update dk_member set cash = cash - #{money} where userId = #{userId}
	</update> 
	
	<!-- 기부받는자 캐시 증감하기 -->
	<update id="updateBoardUserCash">
	    update dk_member set cash = cash + #{money} where userId = #{donatedId}
	</update> 
	
	<!-- 게시글의 기부금액 증감하기 -->
	<update id="updateBoardMoney"> 
	    update dk_board set MONEY = MONEY + #{money} where num = #{num}
	</update> 
	
	<!-- 게시글의 기부금액 조회하기 -->
	<select id="getBoardMoney" resultType="String">
		select money from dk_board where num = #{num}
	</select>
	
	<!-- 내 캐시 히스토리 입력 -->
	<insert id="insertMyCashHistory">
		insert into dk_cash (
							cash_num,
							cashKind,
							cashAmount,
							userId,
							specification,
							board_num
							) values 
										(
											seq_dk_cash.nextval,
											'기부하기',
											#{money},
											#{userId},
											'게시판' ,
											#{num}
										)
	</insert>
	
	<!-- 게시글 유저 캐시 히스토리 입력 -->
	<insert id="insertBoardUserCashHistory">
		insert into dk_cash (
								cash_num,
								cashKind,
								cashAmount,
								userId,
								specification,
								board_num
								) values 
											(
												seq_dk_cash.nextval,
												'기부받기',
												#{money},
												#{donatedId},
												'게시판' ,
												#{num}
											)
	</insert>
	
	<insert id="insertReportdata">
	
			insert into dk_report (
							report_num,
							reportKind,
							reportingId,
							reportingNick,
							reportedId,
							reportedNick,
							board_num,
							reason
							) values 
										(
											seq_dk_report.nextval,
											#{reportKind},
											#{reportingId},
											#{reportingNick},
											#{reportedId},
											#{reportedNick},
											#{board_num},
											#{reason}
										)
	</insert>
	
	
		
	

</mapper>
